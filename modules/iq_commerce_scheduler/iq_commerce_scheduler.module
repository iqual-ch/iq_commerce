<?php

use Drupal\commerce_product\Entity\ProductVariation;

/**
 * Implements hook_cron().
 */
function iq_commerce_scheduler_cron()
{
  $now = date("Y-m-d",time());
  $products_to_be_published = ProductVariation::loadMultiple();
  foreach ($products_to_be_published as $key => $product) {
    if ($product->hasField('field_iq_commerce_unpublish_on')) {
      $unpublish_date = $product->field_iq_commerce_unpublish_on->value;
    }
    if ($product->hasField('field_iq_commerce_publish_on'))
    {
      $publish_date = $product->field_iq_commerce_publish_on->value;
    }
    // If the publish date is in the past, then it should be published.
    if (!empty($publish_date) && $product->status->value == 0) {
      if ($publish_date <= $now && (empty($unpublish_date) || $unpublish_date > $now)) {
        // Publish the variation.
        $product->setPublished(TRUE);
        $product->save();
        // Publish the product as well just in case.
        $product->getProduct()->setPublished(TRUE);
        $product->save();
      }
    }
    // If the unpublished date is in the past, then it we should unpublish it.
    if (!empty($unpublish_date) && $product->status->value == 1) {
      if ($unpublish_date <= $now) {
        $product->setPublished(FALSE);
        $product->save();
      }
    }
    // If the product was already published, but there is a new publishing date
    // then it should be unpublished till then.
    if (!empty($publish_date) && $product->status->value == 1) {
      if ($publish_date > $now) {
        $product->setPublished(FALSE);
        $product->save();
      }
    }
  }
}
